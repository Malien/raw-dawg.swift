{"identifier":{"url":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"step","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","text":"Row","kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg3RowV"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"There are also overloads that allow you to decode the ","type":"text"},{"type":"reference","overridingTitleInlineContent":[{"text":"row into a tuple of columns","type":"text"}],"overridingTitle":"row into a tuple of columns","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","isActive":true,"overridingTitle":"a single Decodable type","overridingTitleInlineContent":[{"type":"text","text":"a single "},{"code":"Decodable","type":"codeVoice"},{"text":" type","type":"text"}]},{"type":"text","text":" insteaf of raw "},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"This is kind of like an iterator, but async, and might error out. When the statement is exhausted,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it will return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Otherwise, it will return the next row. You may not call "},{"type":"codeVoice","code":"step"},{"type":"text","text":" again after"},{"text":" ","type":"text"},{"type":"text","text":"it has returned "},{"code":"nil","type":"codeVoice"},{"text":". ALthough there is a check, that will continue yielding ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":"s if you do.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this might be changed in the future, so donâ€™t rely on that behavior."}]}]}],"metadata":{"modules":[{"name":"RawDawg"}],"externalID":"s:7RawDawg17PreparedStatementV4stepAA3RowVSgyYaKF","role":"symbol","title":"step()","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"step"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7RawDawg3RowV","kind":"typeIdentifier","text":"Row"},{"text":"?","kind":"text"}]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Poll-style of fetching results, that yields a single ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row"},{"type":"text","text":" at a time."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement"]]},"seeAlsoSections":[{"title":"Incrementally stepping through rows","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rawdawg\/preparedstatement\/step()-76bxz"]}],"references":{"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-76bxz":{"abstract":[{"text":"Poll-style of fetching results, that yields a single ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true,"type":"reference"},{"text":" at a time.","type":"text"}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-76bxz","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"step","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg3RowV","text":"Row"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveDecodable":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"symbol","type":"topic","abstract":[{"text":"A way of decoding dynamic ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},{"text":" into more specific type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveDecodable"}],"title":"SQLPrimitiveDecodable","url":"\/documentation\/rawdawg\/sqlprimitivedecodable","role":"symbol","navigatorTitle":[{"text":"SQLPrimitiveDecodable","kind":"identifier"}]},"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/Row":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decoded, owned row, with column values"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"title":"Row","url":"\/documentation\/rawdawg\/row","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Row"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-92san":{"kind":"symbol","title":"step()","url":"\/documentation\/rawdawg\/preparedstatement\/step()-92san","abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single tuple of "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","isActive":true},{"text":" values (a row) at a time.","type":"text"}],"type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"step"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Column2","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Column","kind":"genericParameter"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"Column1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Column2"},{"kind":"text","text":", repeat each "},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-3wy2j":{"abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" value (row) at a time."}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-3wy2j","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"step","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic"}}}