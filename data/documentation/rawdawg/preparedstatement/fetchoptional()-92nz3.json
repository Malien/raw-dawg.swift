{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"consuming"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchOptional"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Column2"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Column"},{"kind":"text","text":">() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"Column1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Column2","kind":"typeIdentifier"},{"text":", repeat each ","kind":"text"},{"text":"Column","kind":"typeIdentifier"},{"text":")? ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Column1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SQLPrimitiveDecodable","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Column2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP","text":"SQLPrimitiveDecodable"},{"text":", repeat each ","kind":"text"},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SQLPrimitiveDecodable","preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP","kind":"typeIdentifier","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This is a wrapper on top of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-30gfy"},{"text":" method, that decodes the ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","type":"reference","isActive":true},{"text":" into a tuple of columns.","type":"text"},{"type":"text","text":" "},{"text":"It is a variadic method that is restricted to tuples of length 2 or more. Tuples of length 0 (aka. ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"are not allowed, ","type":"text"},{"type":"strikethrough","inlineContent":[{"text":"as there is no way to craft a query that yields no columns","type":"text"}]},{"text":" Insert\/update statements without returning clause","type":"text"},{"type":"text","text":" "},{"text":"(which yield 0 values) are better served by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()"},{"type":"text","text":" method. Tuples of length 1 are not allowed"},{"text":" ","type":"text"},{"text":"as they conflict with the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53","type":"reference"},{"text":" overload that decodes a single ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type for types that are both"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"type":"text","text":" ("},{"inlineContent":[{"type":"text","text":"which is the all of them"}],"type":"emphasis"},{"text":").","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you instead want to decode a row into a "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"overridingTitle":"there is an overload just for that","isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53","overridingTitleInlineContent":[{"text":"there is an overload just for that","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"This action will consume and finalize the statement, yielding any errors that rise from doing so back to the caller","type":"text"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"RawDawg"}],"externalID":"s:7RawDawg17PreparedStatementV13fetchOptionalx_q_q0_q0_QptSgyYaKRv0_AA21SQLPrimitiveDecodableRzAaFR_AaFR0_r1_lF","title":"fetchOptional()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchOptional","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Column1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Column2","kind":"genericParameter"},{"kind":"text","text":", each "},{"text":"Column","kind":"genericParameter"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"Column1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Column2"},{"text":", repeat each ","kind":"text"},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"sections":[],"abstract":[{"type":"text","text":"Return the frist row decoded as a tuple of "},{"isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","type":"reference"},{"type":"text","text":" values, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the statement yields 0 rows"}],"seeAlsoSections":[{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-30gfy","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53"],"title":"Fetching an optional row","generated":true}],"hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement"]]},"identifier":{"url":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-92nz3","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-92nz3"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://RawDawg/documentation/RawDawg/SQLPrimitiveDecodable":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"symbol","type":"topic","abstract":[{"text":"A way of decoding dynamic ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},{"text":" into more specific type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveDecodable"}],"title":"SQLPrimitiveDecodable","url":"\/documentation\/rawdawg\/sqlprimitivedecodable","role":"symbol","navigatorTitle":[{"text":"SQLPrimitiveDecodable","kind":"identifier"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/SQLiteValue":{"title":"SQLiteValue","kind":"symbol","abstract":[{"text":"Owned SQLite value of all possible storage types","type":"text"}],"url":"\/documentation\/rawdawg\/sqlitevalue","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValue"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/Row":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decoded, owned row, with column values"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"title":"Row","url":"\/documentation\/rawdawg\/row","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Row"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-30gfy":{"url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-30gfy","role":"symbol","type":"topic","title":"fetchOptional()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-30gfy","abstract":[{"text":"Return the first ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the statement yields 0 rows","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetchOptional","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7RawDawg3RowV","text":"Row","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-92nz3":{"type":"topic","abstract":[{"type":"text","text":"Return the frist row decoded as a tuple of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"type":"text","text":" values, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the statement yields 0 rows"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-92nz3","title":"fetchOptional()","url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-92nz3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchOptional"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Column1"},{"text":", ","kind":"text"},{"text":"Column2","kind":"genericParameter"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Column"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"text":"Column1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Column2","kind":"typeIdentifier"},{"kind":"text","text":", repeat each "},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"role":"symbol","kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/run()":{"abstract":[{"text":"Run the statement, for when the query result doesn’t matter.","type":"text"}],"title":"run()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/run()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7RawDawg14InsertionStatsV","text":"InsertionStats","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-1sp53":{"role":"symbol","title":"fetchOptional()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fetchOptional","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-1sp53","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53","abstract":[{"text":"Return the first row decoded using a ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" protocol or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the statement yields 0 rows"}],"kind":"symbol"}}}