{"kind":"symbol","metadata":{"externalID":"s:7RawDawg17PreparedStatementV8fetchOnexyYaKSeRzlF","roleHeading":"Instance Method","role":"symbol","title":"fetchOne()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchOne","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"modules":[{"name":"RawDawg"}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-4grfr"},"hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Return the first row decoded using ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" protocol. Error out if the statement yields 0 rows","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"consuming"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchOne"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteError\/noRowsFetched","isActive":true},{"text":" if no rows were selected by the statement","type":"text"}]}]},{"inlineContent":[{"type":"text","text":"This is a wrapper on top of the "},{"isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui","type":"reference"},{"type":"text","text":" method, that decodes the row into a single "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type."},{"text":" ","type":"text"},{"type":"text","text":"Three handled cases are:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"A single column is expected, and the type is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"text":", it will be decoded as such.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A single column is expected, and the type uses "},{"code":"Decoder\/singleValueContainer","type":"codeVoice"},{"type":"text","text":" to decode itself."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Multiple columns are expected, and the type uses ","type":"text"},{"type":"codeVoice","code":"Decoder\/container(keyedBy:)"},{"text":" to decode itself.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Any other case (aka. "},{"code":"Decoder\/unkeyedContainer","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decoder\/singleValueContainer"},{"text":" on multiple columns)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is not supported and will throw a runtime error."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"This action will consume and finalize the statement, yielding any errors that rise from doing so back to the caller","type":"text"},{"text":" ","type":"text"},{"text":"If you donâ€™t want to create a ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" struct just to have a type-safe decodes of row values, there is ","type":"text"},{"overridingTitleInlineContent":[{"text":"an overload","type":"text"},{"text":" ","type":"text"},{"text":"that is just right","type":"text"}],"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-8yva9","overridingTitle":"an overload that is just right","isActive":true},{"type":"text","text":" for those ad-hoc style of queries"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rawdawg\/preparedstatement\/fetchone()-4grfr"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-8yva9"],"generated":true,"title":"Fetching a single row"}],"references":{"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/Row":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decoded, owned row, with column values"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"title":"Row","url":"\/documentation\/rawdawg\/row","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Row"}]},"doc://RawDawg/documentation/RawDawg/SQLiteError/noRowsFetched":{"kind":"symbol","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteError\/noRowsFetched","url":"\/documentation\/rawdawg\/sqliteerror\/norowsfetched","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"noRowsFetched"}],"title":"SQLiteError.noRowsFetched","abstract":[{"text":"When calls to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui"},{"type":"text","text":" (and friends) yield 0 rows"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-8yva9":{"kind":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-8yva9","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-8yva9","type":"topic","title":"fetchOne()","abstract":[{"type":"text","text":"Return the first row decoded as a tuple of "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","isActive":true},{"text":" values. Error out if the statment yields 0 rows","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchOne","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Column1"},{"text":", each ","kind":"text"},{"kind":"genericParameter","text":"Column"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"Column1","kind":"typeIdentifier"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Column"},{"text":")","kind":"text"}],"role":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-4grfr":{"kind":"symbol","type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-4grfr","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-4grfr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchOne"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"title":"fetchOne()","abstract":[{"type":"text","text":"Return the first row decoded using "},{"type":"codeVoice","code":"Decodable"},{"text":" protocol. Error out if the statement yields 0 rows","type":"text"}]},"doc://RawDawg/documentation/RawDawg/SQLiteValue":{"title":"SQLiteValue","kind":"symbol","abstract":[{"text":"Owned SQLite value of all possible storage types","type":"text"}],"url":"\/documentation\/rawdawg\/sqlitevalue","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValue"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-o1ui":{"kind":"symbol","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-o1ui","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fetchOne","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Row","preciseIdentifier":"s:7RawDawg3RowV","kind":"typeIdentifier"}],"title":"fetchOne()","abstract":[{"text":"Return the first ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row"},{"type":"text","text":". Error out if the statment yields 0 rows"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveDecodable":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"symbol","type":"topic","abstract":[{"text":"A way of decoding dynamic ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},{"text":" into more specific type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveDecodable"}],"title":"SQLPrimitiveDecodable","url":"\/documentation\/rawdawg\/sqlprimitivedecodable","role":"symbol","navigatorTitle":[{"text":"SQLPrimitiveDecodable","kind":"identifier"}]}}}