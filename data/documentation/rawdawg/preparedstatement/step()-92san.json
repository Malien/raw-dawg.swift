{"hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"step","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Column2"},{"kind":"text","text":", each "},{"text":"Column","kind":"genericParameter"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"text":"Column1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Column2","kind":"typeIdentifier"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Column"},{"kind":"text","text":")? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Column1","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP","text":"SQLPrimitiveDecodable","kind":"typeIdentifier","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"text":", ","kind":"text"},{"text":"Column2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP","text":"SQLPrimitiveDecodable"},{"text":", repeat each ","kind":"text"},{"text":"Column","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","text":"SQLPrimitiveDecodable","preciseIdentifier":"s:7RawDawg21SQLPrimitiveDecodableP"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"This is a wrapper on top of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","isActive":true},{"type":"text","text":" method, that decodes the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true},{"text":" into a tuple of columns.","type":"text"},{"text":" ","type":"text"},{"text":"It is a variadic method that is restricted to tuples of length 2 or more. Tuples of length 0 (aka. ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"are not allowed, "},{"inlineContent":[{"type":"text","text":"as there is no way to craft a query that yields no columns"}],"type":"strikethrough"},{"text":" Insert\/update statements without returning clause","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(which yield 0 values) are better served by "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()","isActive":true},{"type":"text","text":" method. Tuples of length 1 are not allowed"},{"type":"text","text":" "},{"type":"text","text":"as they conflict with the "},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","type":"reference","isActive":true},{"type":"text","text":" overload that decodes a single "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type for types that are both"},{"type":"text","text":" "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"type":"text","text":" ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"which is the all of them"}]},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you instead want to decode a row into a "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"overridingTitle":"there is an overload just for that","overridingTitleInlineContent":[{"type":"text","text":"there is an overload just for that"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","isActive":true,"type":"reference"}],"type":"paragraph"},{"inlineContent":[{"text":"This is kind of like an iterator, but async, and might error out. When the statement is exhausted,","type":"text"},{"type":"text","text":" "},{"text":"it will return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":". Otherwise, it will return the next row. You may not call "},{"type":"codeVoice","code":"step"},{"type":"text","text":" again after"},{"text":" ","type":"text"},{"text":"it has returned ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". ALthough there is a check, that will continue yielding ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"s if you do."},{"text":" ","type":"text"},{"type":"text","text":"this might be changed in the future, so donâ€™t rely on that behavior."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rawdawg\/preparedstatement\/step()-92san"]}],"sections":[],"kind":"symbol","metadata":{"title":"step()","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"RawDawg"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"step","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Column2","kind":"genericParameter"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Column"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"kind":"typeIdentifier","text":"Column1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Column2"},{"kind":"text","text":", repeat each "},{"kind":"typeIdentifier","text":"Column"},{"text":")?","kind":"text"}],"symbolKind":"method","externalID":"s:7RawDawg17PreparedStatementV4stepx_q_q0_q0_QptSgyYaKRv0_AA21SQLPrimitiveDecodableRzAaFR_AaFR0_r1_lF"},"identifier":{"url":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Incrementally stepping through rows","generated":true,"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j"]}],"abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single tuple of "},{"isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","type":"reference"},{"type":"text","text":" values (a row) at a time."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/SQLiteValue":{"title":"SQLiteValue","kind":"symbol","abstract":[{"text":"Owned SQLite value of all possible storage types","type":"text"}],"url":"\/documentation\/rawdawg\/sqlitevalue","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValue"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},"doc://RawDawg/documentation/RawDawg/Row":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decoded, owned row, with column values"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"title":"Row","url":"\/documentation\/rawdawg\/row","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Row"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-76bxz":{"abstract":[{"text":"Poll-style of fetching results, that yields a single ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true,"type":"reference"},{"text":" at a time.","type":"text"}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-76bxz","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"step","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg3RowV","text":"Row"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveDecodable":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"symbol","type":"topic","abstract":[{"text":"A way of decoding dynamic ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},{"text":" into more specific type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveDecodable"}],"title":"SQLPrimitiveDecodable","url":"\/documentation\/rawdawg\/sqlprimitivedecodable","role":"symbol","navigatorTitle":[{"text":"SQLPrimitiveDecodable","kind":"identifier"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-3wy2j":{"abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" value (row) at a time."}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-3wy2j","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"step","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/run()":{"abstract":[{"text":"Run the statement, for when the query result doesnâ€™t matter.","type":"text"}],"title":"run()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/run()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7RawDawg14InsertionStatsV","text":"InsertionStats","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-92san":{"kind":"symbol","title":"step()","url":"\/documentation\/rawdawg\/preparedstatement\/step()-92san","abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single tuple of "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","isActive":true},{"text":" values (a row) at a time.","type":"text"}],"type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"step"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Column2","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Column","kind":"genericParameter"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"Column1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Column2"},{"kind":"text","text":", repeat each "},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}]}}}