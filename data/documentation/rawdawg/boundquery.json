{"abstract":[{"type":"text","text":"The means by which RawDawg safely escapes and binds interpolated values to a query."}],"metadata":{"externalID":"s:7RawDawg10BoundQueryV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BoundQuery"}],"symbolKind":"struct","modules":[{"name":"RawDawg"}],"navigatorTitle":[{"text":"BoundQuery","kind":"identifier"}],"roleHeading":"Structure","title":"BoundQuery","role":"symbol"},"seeAlsoSections":[{"title":"Making Queries","generated":true,"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/Database","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveEncodable"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery"},"sections":[],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/StringInterpolation"]},{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/init(stringInterpolation:)","doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/init(stringLiteral:)"],"title":"Initializers"},{"title":"Type Aliases","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/StringLiteralType"]},{"title":"Default Implementations","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/ExpressibleByUnicodeScalarLiteral-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/RawDawg\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/RawDawg\/s32ExpressibleByStringInterpolationP","doc:\/\/RawDawg\/s26ExpressibleByStringLiteralP","doc:\/\/RawDawg\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/RawDawg\/s8SendableP"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rawdawg\/boundquery"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BoundQuery","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"codeListing","syntax":"swift","code":["let query: BoundQuery = \"select * from users where id = \\(1)\""]},{"inlineContent":[{"text":"It supports three kinds of interpolated values:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"any ","type":"text"},{"type":"codeVoice","code":"SQLPrimitiveEncodable"},{"type":"text","text":" type, which is inserted as a placeholder into the underlying"},{"text":" ","type":"text"},{"type":"text","text":"query string, and is bound to the query at execution time."}]},{"type":"codeListing","code":["let name = \"Alice\"","let age = 30","let email: String? = nil","let quotient: Double = 1.5","let query: BoundQuery = \"\"\"","    insert into users (name, age, email, quotient) ","    values (\\(name), \\(age), \\(email), \\(quotient))","    \"\"\""],"syntax":"swift"}]},{"content":[{"inlineContent":[{"type":"text","text":"another "},{"code":"BoundQuery","type":"codeVoice"},{"type":"text","text":", which is inserted as a fragment into the underlying query string."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let whereClause: BoundQuery = \"where id = \\(1)\"","let query: BoundQuery = \"select * from users \\(fragment: whereClause)\""]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"a raw string, which is inserted as-is into the underlying query string. This is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not safe and should be used with caution."}]},{"code":["let query: BoundQuery = \"select * from users where id = \\(1) \\(raw: \"and name = 'Alice'\")\""],"type":"codeListing","syntax":"swift"}]}]}]}],"kind":"symbol","references":{"doc://RawDawg/documentation/RawDawg/BoundQuery/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"url":"\/documentation\/rawdawg\/boundquery\/expressiblebyextendedgraphemeclusterliteral-implementations","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","abstract":[],"role":"collectionGroup"},"doc://RawDawg/documentation/RawDawg/SQLiteValue":{"title":"SQLiteValue","kind":"symbol","abstract":[{"text":"Owned SQLite value of all possible storage types","type":"text"}],"url":"\/documentation\/rawdawg\/sqlitevalue","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValue"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/RawDawg\/s8SendableP"},"doc://RawDawg/documentation/RawDawg/BoundQuery/StringInterpolation":{"type":"topic","url":"\/documentation\/rawdawg\/boundquery\/stringinterpolation","title":"BoundQuery.StringInterpolation","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringInterpolation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"StringInterpolation"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/StringInterpolation","abstract":[]},"doc://RawDawg/documentation/RawDawg/Database":{"navigatorTitle":[{"text":"Database","kind":"identifier"}],"title":"Database","role":"symbol","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database","url":"\/documentation\/rawdawg\/database","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Database","kind":"identifier"}],"abstract":[{"type":"text","text":"An asyncronous sqlite3 database connection."}]},"doc://RawDawg/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","type":"unresolvable","identifier":"doc:\/\/RawDawg\/s43ExpressibleByExtendedGraphemeClusterLiteralP"},"doc://RawDawg/s32ExpressibleByStringInterpolationP":{"title":"Swift.ExpressibleByStringInterpolation","type":"unresolvable","identifier":"doc:\/\/RawDawg\/s32ExpressibleByStringInterpolationP"},"doc://RawDawg/documentation/RawDawg/BoundQuery":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BoundQuery"}],"type":"topic","url":"\/documentation\/rawdawg\/boundquery","abstract":[{"type":"text","text":"The means by which RawDawg safely escapes and binds interpolated values to a query."}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery","title":"BoundQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoundQuery"}],"role":"symbol"},"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveEncodable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveEncodable"}],"navigatorTitle":[{"kind":"identifier","text":"SQLPrimitiveEncodable"}],"abstract":[{"text":"A way of encoding a swift value into ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue","isActive":true,"type":"reference"}],"role":"symbol","title":"SQLPrimitiveEncodable","url":"\/documentation\/rawdawg\/sqlprimitiveencodable","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveEncodable","type":"topic","kind":"symbol"},"doc://RawDawg/s33ExpressibleByUnicodeScalarLiteralP":{"title":"Swift.ExpressibleByUnicodeScalarLiteral","type":"unresolvable","identifier":"doc:\/\/RawDawg\/s33ExpressibleByUnicodeScalarLiteralP"},"doc://RawDawg/documentation/RawDawg/BoundQuery/init(stringInterpolation:)":{"type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/init(stringInterpolation:)","abstract":[],"kind":"symbol","url":"\/documentation\/rawdawg\/boundquery\/init(stringinterpolation:)","title":"init(stringInterpolation:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"stringInterpolation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"BoundQuery","kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg10BoundQueryV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7RawDawg10BoundQueryV19StringInterpolationV","text":"StringInterpolation","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"doc://RawDawg/documentation/RawDawg/BoundQuery/StringLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/StringLiteralType","title":"BoundQuery.StringLiteralType","kind":"symbol","type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"url":"\/documentation\/rawdawg\/boundquery\/stringliteraltype","role":"symbol"},"doc://RawDawg/s26ExpressibleByStringLiteralP":{"title":"Swift.ExpressibleByStringLiteral","type":"unresolvable","identifier":"doc:\/\/RawDawg\/s26ExpressibleByStringLiteralP"},"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/BoundQuery/init(stringLiteral:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"stringLiteral"},{"kind":"text","text":": "},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7RawDawg10BoundQueryV17StringLiteralTypea","text":"StringLiteralType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/init(stringLiteral:)","title":"init(stringLiteral:)","kind":"symbol","type":"topic","url":"\/documentation\/rawdawg\/boundquery\/init(stringliteral:)","role":"symbol"},"doc://RawDawg/documentation/RawDawg/BoundQuery/ExpressibleByUnicodeScalarLiteral-Implementations":{"url":"\/documentation\/rawdawg\/boundquery\/expressiblebyunicodescalarliteral-implementations","role":"collectionGroup","type":"topic","title":"ExpressibleByUnicodeScalarLiteral Implementations","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery\/ExpressibleByUnicodeScalarLiteral-Implementations","abstract":[],"kind":"article"}}}