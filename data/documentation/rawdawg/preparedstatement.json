{"topicSections":[{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()"]},{"title":"Incrementally stepping through rows","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j"]},{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-7rh3m","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-6jov4","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-3h0eg"],"title":"Fetching all rows"},{"title":"Fetching a single row","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-8yva9","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-4grfr"]},{"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-30gfy","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-92nz3","doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53"],"title":"Fetching an optional row"},{"title":"Instance Methods","identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/finalize()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"Prepared statement returned from the ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true,"type":"reference"},{"type":"text","text":" function."}],"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/RawDawg\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/RawDawg\/documentation\/RawDawg\/Database","doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery","doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveEncodable"],"title":"Making Queries"}],"variants":[{"paths":["\/documentation\/rawdawg\/preparedstatement"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","externalID":"s:7RawDawg17PreparedStatementV","modules":[{"name":"RawDawg"}],"navigatorTitle":[{"text":"PreparedStatement","kind":"identifier"}],"title":"PreparedStatement"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PreparedStatement"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"Holds and manages the underlying ","type":"text"},{"code":"sqlite3_stmt","type":"codeVoice"},{"text":" pointer. It is a non-copyable type,","type":"text"},{"type":"text","text":" "},{"text":"and upon deinitialization, it will automatically destroy any resources associated with it.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","isActive":true,"type":"reference"},{"text":" is the low-level way to incrementally fetch rows from the database.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Alternatively, there are higher-level methods like "},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-7rh3m","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Higher-level APIs are marked as "},{"type":"codeVoice","code":"consuming"},{"type":"text","text":" and as such, they will automatically finalize the statement"},{"type":"text","text":" "},{"type":"text","text":"upon completion. "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","isActive":true},{"type":"text","text":" on the other hand will not do so. Even though the"},{"type":"text","text":" "},{"type":"codeVoice","code":"PreparedStatement"},{"type":"text","text":" type is non-copyable, and will cleanup after itself, it is still recommended to"},{"type":"text","text":" "},{"type":"text","text":"call "},{"isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/finalize()","type":"reference"},{"text":" explicitly, since the deinitialization is done asynchronously and","type":"text"},{"type":"text","text":" "},{"text":"any errors that might occur during the finalization will be logged, but are ultimately ignored.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"All of the methods run on the ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database","isActive":true,"type":"reference"},{"text":" actor that created the prepared statement, and thus two","type":"text"},{"type":"text","text":" "},{"text":"are tied together.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/RawDawg\/documentation\/RawDawg"]]},"references":{"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-92san":{"kind":"symbol","title":"step()","url":"\/documentation\/rawdawg\/preparedstatement\/step()-92san","abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single tuple of "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","isActive":true},{"text":" values (a row) at a time.","type":"text"}],"type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-92san","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"step"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Column2","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Column","kind":"genericParameter"},{"text":">() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"Column1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Column2"},{"kind":"text","text":", repeat each "},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PreparedStatement","kind":"identifier"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement","abstract":[{"type":"text","text":"Prepared statement returned from the "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)","isActive":true},{"text":" function.","type":"text"}],"title":"PreparedStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PreparedStatement"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/BoundQuery":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BoundQuery"}],"type":"topic","url":"\/documentation\/rawdawg\/boundquery","abstract":[{"type":"text","text":"The means by which RawDawg safely escapes and binds interpolated values to a query."}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/BoundQuery","title":"BoundQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoundQuery"}],"role":"symbol"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveDecodable":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","kind":"symbol","type":"topic","abstract":[{"text":"A way of decoding dynamic ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},{"text":" into more specific type.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveDecodable"}],"title":"SQLPrimitiveDecodable","url":"\/documentation\/rawdawg\/sqlprimitivedecodable","role":"symbol","navigatorTitle":[{"text":"SQLPrimitiveDecodable","kind":"identifier"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-1sp53":{"role":"symbol","title":"fetchOptional()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fetchOptional","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-1sp53","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-1sp53","abstract":[{"text":"Return the first row decoded using a ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" protocol or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the statement yields 0 rows"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-76bxz":{"abstract":[{"text":"Poll-style of fetching results, that yields a single ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true,"type":"reference"},{"text":" at a time.","type":"text"}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-76bxz","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-76bxz","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"step","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RawDawg3RowV","text":"Row"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchAll()-7rh3m":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchAll"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Row","preciseIdentifier":"s:7RawDawg3RowV"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-7rh3m","type":"topic","url":"\/documentation\/rawdawg\/preparedstatement\/fetchall()-7rh3m","abstract":[{"text":"Collect all of the rows, statment yields, into an array of ","type":"text"},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true},{"text":" values","type":"text"}],"title":"fetchAll()","role":"symbol","kind":"symbol"},"doc://RawDawg/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/RawDawg\/s8SendableP","title":"Swift.Sendable"},"doc://RawDawg/documentation/RawDawg/Row":{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decoded, owned row, with column values"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"title":"Row","url":"\/documentation\/rawdawg\/row","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Row"}]},"doc://RawDawg/documentation/RawDawg":{"kind":"symbol","abstract":[{"text":"Yet another SQLite3 Swift driver","type":"text"}],"type":"topic","title":"RawDawg","role":"collection","url":"\/documentation\/rawdawg","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchAll()-6jov4":{"title":"fetchAll()","url":"\/documentation\/rawdawg\/preparedstatement\/fetchall()-6jov4","abstract":[{"text":"Collect all of the rows, statement yields, into an array of tuples of ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","type":"reference","isActive":true},{"type":"text","text":" values."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Column1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Column2","kind":"genericParameter"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Column"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> [("},{"text":"Column1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Column2"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Column"},{"kind":"text","text":")]"}],"type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-6jov4"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/run()":{"abstract":[{"text":"Run the statement, for when the query result doesn’t matter.","type":"text"}],"title":"run()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/run()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/run()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7RawDawg14InsertionStatsV","text":"InsertionStats","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-92nz3":{"type":"topic","abstract":[{"type":"text","text":"Return the frist row decoded as a tuple of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable"},{"type":"text","text":" values, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the statement yields 0 rows"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-92nz3","title":"fetchOptional()","url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-92nz3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchOptional"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Column1"},{"text":", ","kind":"text"},{"text":"Column2","kind":"genericParameter"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Column"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"text":"Column1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Column2","kind":"typeIdentifier"},{"kind":"text","text":", repeat each "},{"text":"Column","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"role":"symbol","kind":"symbol"},"doc://RawDawg/documentation/RawDawg/SQLiteValue":{"title":"SQLiteValue","kind":"symbol","abstract":[{"text":"Owned SQLite value of all possible storage types","type":"text"}],"url":"\/documentation\/rawdawg\/sqlitevalue","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLiteValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLiteValue"}],"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue"},"doc://RawDawg/documentation/RawDawg/Database/prepare(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares a SQL query for execution."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepare"},{"text":"(","kind":"text"},{"text":"BoundQuery","preciseIdentifier":"s:7RawDawg10BoundQueryV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"PreparedStatement","preciseIdentifier":"s:7RawDawg17PreparedStatementV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/rawdawg\/database\/prepare(_:)","title":"prepare(_:)","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database\/prepare(_:)"},"doc://RawDawg/documentation/RawDawg/SQLPrimitiveEncodable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLPrimitiveEncodable"}],"navigatorTitle":[{"kind":"identifier","text":"SQLPrimitiveEncodable"}],"abstract":[{"text":"A way of encoding a swift value into ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLiteValue","isActive":true,"type":"reference"}],"role":"symbol","title":"SQLPrimitiveEncodable","url":"\/documentation\/rawdawg\/sqlprimitiveencodable","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveEncodable","type":"topic","kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-4grfr":{"kind":"symbol","type":"topic","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-4grfr","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-4grfr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchOne"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"title":"fetchOne()","abstract":[{"type":"text","text":"Return the first row decoded using "},{"type":"codeVoice","code":"Decodable"},{"text":" protocol. Error out if the statement yields 0 rows","type":"text"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchAll()-3h0eg":{"kind":"symbol","abstract":[{"text":"Collect all of the rows, statment yields, into an array of ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" values.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fetchAll","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"type":"topic","url":"\/documentation\/rawdawg\/preparedstatement\/fetchall()-3h0eg","title":"fetchAll()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchAll()-3h0eg"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/finalize()":{"url":"\/documentation\/rawdawg\/preparedstatement\/finalize()","role":"symbol","type":"topic","title":"finalize()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/finalize()","abstract":[{"text":"Cleans up the sqlite3 resources associated with the prepared statement.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"finalize"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-8yva9":{"kind":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-8yva9","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-8yva9","type":"topic","title":"fetchOne()","abstract":[{"type":"text","text":"Return the first row decoded as a tuple of "},{"type":"reference","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/SQLPrimitiveDecodable","isActive":true},{"text":" values. Error out if the statment yields 0 rows","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchOne","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Column1"},{"text":", each ","kind":"text"},{"kind":"genericParameter","text":"Column"},{"text":">() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> (","kind":"text"},{"text":"Column1","kind":"typeIdentifier"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Column"},{"text":")","kind":"text"}],"role":"symbol"},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOne()-o1ui":{"kind":"symbol","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOne()-o1ui","url":"\/documentation\/rawdawg\/preparedstatement\/fetchone()-o1ui","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fetchOne","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Row","preciseIdentifier":"s:7RawDawg3RowV","kind":"typeIdentifier"}],"title":"fetchOne()","abstract":[{"text":"Return the first ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row"},{"type":"text","text":". Error out if the statment yields 0 rows"}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/fetchOptional()-30gfy":{"url":"\/documentation\/rawdawg\/preparedstatement\/fetchoptional()-30gfy","role":"symbol","type":"topic","title":"fetchOptional()","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/fetchOptional()-30gfy","abstract":[{"text":"Return the first ","type":"text"},{"identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Row","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the statement yields 0 rows","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetchOptional","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7RawDawg3RowV","text":"Row","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://RawDawg/documentation/RawDawg/Database":{"navigatorTitle":[{"text":"Database","kind":"identifier"}],"title":"Database","role":"symbol","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/Database","url":"\/documentation\/rawdawg\/database","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Database","kind":"identifier"}],"abstract":[{"type":"text","text":"An asyncronous sqlite3 database connection."}]},"doc://RawDawg/documentation/RawDawg/PreparedStatement/step()-3wy2j":{"abstract":[{"type":"text","text":"Poll-style of fetching results, that yields a single "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" value (row) at a time."}],"title":"step()","role":"symbol","url":"\/documentation\/rawdawg\/preparedstatement\/step()-3wy2j","identifier":"doc:\/\/RawDawg\/documentation\/RawDawg\/PreparedStatement\/step()-3wy2j","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"step","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic"}}}